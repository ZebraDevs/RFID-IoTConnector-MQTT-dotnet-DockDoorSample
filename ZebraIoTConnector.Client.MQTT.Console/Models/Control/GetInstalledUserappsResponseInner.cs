/*
 * RAW MQTT Payloads
 *
 *  
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class GetInstalledUserappsResponseInner : IEquatable<GetInstalledUserappsResponseInner>
    { 
        /// <summary>
        /// userapp name
        /// </summary>
        /// <value>userapp name</value>
        [Required]

        [MinLength(1)]
        [DataMember(Name="appname")]
        public string Appname { get; set; }

        /// <summary>
        /// autostart setting
        /// </summary>
        /// <value>autostart setting</value>
        [Required]

        [DataMember(Name="autostart")]
        public bool? Autostart { get; set; }

        /// <summary>
        /// userapp metadata
        /// </summary>
        /// <value>userapp metadata</value>
        [Required]

        [MinLength(1)]
        [DataMember(Name="metadata")]
        public string Metadata { get; set; }

        /// <summary>
        /// userapp running status
        /// </summary>
        /// <value>userapp running status</value>
        [Required]

        [DataMember(Name="runningStatus")]
        public bool? RunningStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetInstalledUserappsResponseInner {\n");
            sb.Append("  Appname: ").Append(Appname).Append("\n");
            sb.Append("  Autostart: ").Append(Autostart).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("  RunningStatus: ").Append(RunningStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GetInstalledUserappsResponseInner)obj);
        }

        /// <summary>
        /// Returns true if GetInstalledUserappsResponseInner instances are equal
        /// </summary>
        /// <param name="other">Instance of GetInstalledUserappsResponseInner to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetInstalledUserappsResponseInner other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Appname == other.Appname ||
                    Appname != null &&
                    Appname.Equals(other.Appname)
                ) && 
                (
                    Autostart == other.Autostart ||
                    Autostart != null &&
                    Autostart.Equals(other.Autostart)
                ) && 
                (
                    Metadata == other.Metadata ||
                    Metadata != null &&
                    Metadata.Equals(other.Metadata)
                ) && 
                (
                    RunningStatus == other.RunningStatus ||
                    RunningStatus != null &&
                    RunningStatus.Equals(other.RunningStatus)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Appname != null)
                    hashCode = hashCode * 59 + Appname.GetHashCode();
                    if (Autostart != null)
                    hashCode = hashCode * 59 + Autostart.GetHashCode();
                    if (Metadata != null)
                    hashCode = hashCode * 59 + Metadata.GetHashCode();
                    if (RunningStatus != null)
                    hashCode = hashCode * 59 + RunningStatus.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GetInstalledUserappsResponseInner left, GetInstalledUserappsResponseInner right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GetInstalledUserappsResponseInner left, GetInstalledUserappsResponseInner right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
