/*
 * RAW MQTT Payloads
 *
 *  
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// Status of the antennas connection
    /// </summary>
    [DataContract]
    public partial class GetStatusResponseAntennas : IEquatable<GetStatusResponseAntennas>
    { 
        /// <summary>
        /// Antenna 0 connection state (only applicable to ATR7000)
        /// </summary>
        /// <value>Antenna 0 connection state (only applicable to ATR7000)</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum Enum
        {
            /// <summary>
            /// Enum ConnectedEnum for connected
            /// </summary>
            [EnumMember(Value = "connected")]
            ConnectedEnum = 0,
            /// <summary>
            /// Enum DisconnectedEnum for disconnected
            /// </summary>
            [EnumMember(Value = "disconnected")]
            DisconnectedEnum = 1        }

        /// <summary>
        /// Antenna 0 connection state (only applicable to ATR7000)
        /// </summary>
        /// <value>Antenna 0 connection state (only applicable to ATR7000)</value>
        [Required]

        [DataMember(Name = "0")]
        public Enum? _0 { get; set; }

        [DataMember(Name="1")]
        public Enum? _1 { get; set; }

        [DataMember(Name="2")]
        public Enum? _2 { get; set; }

        [DataMember(Name="3")]
        public Enum? _3 { get; set; }

        [DataMember(Name="4")]
        public Enum? _4 { get; set; }

        [DataMember(Name="5")]
        public Enum? _5 { get; set; }

        [DataMember(Name="6")]
        public Enum? _6 { get; set; }

        [DataMember(Name="7")]
        public Enum? _7 { get; set; }

        [DataMember(Name="8")]
        public Enum? _8 { get; set; }

        [DataMember(Name="9")]
        public Enum? _9 { get; set; }

        [DataMember(Name="10")]
        public Enum? _10 { get; set; }
        public Enum? _11 { get; set; }
        
        [DataMember(Name="12")]
        public Enum? _12 { get; set; }

        [DataMember(Name="13")]
        public Enum? _13 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetStatusResponseAntennas {\n");
            sb.Append("  _0: ").Append(_0).Append("\n");
            sb.Append("  _1: ").Append(_1).Append("\n");
            sb.Append("  _2: ").Append(_2).Append("\n");
            sb.Append("  _3: ").Append(_3).Append("\n");
            sb.Append("  _4: ").Append(_4).Append("\n");
            sb.Append("  _5: ").Append(_5).Append("\n");
            sb.Append("  _6: ").Append(_6).Append("\n");
            sb.Append("  _7: ").Append(_7).Append("\n");
            sb.Append("  _8: ").Append(_8).Append("\n");
            sb.Append("  _9: ").Append(_9).Append("\n");
            sb.Append("  _10: ").Append(_10).Append("\n");
            sb.Append("  _11: ").Append(_11).Append("\n");
            sb.Append("  _12: ").Append(_12).Append("\n");
            sb.Append("  _13: ").Append(_13).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GetStatusResponseAntennas)obj);
        }

        /// <summary>
        /// Returns true if GetStatusResponseAntennas instances are equal
        /// </summary>
        /// <param name="other">Instance of GetStatusResponseAntennas to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetStatusResponseAntennas other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    _0 == other._0 ||
                    _0 != null &&
                    _0.Equals(other._0)
                ) && 
                (
                    _1 == other._1 ||
                    _1 != null &&
                    _1.Equals(other._1)
                ) && 
                (
                    _2 == other._2 ||
                    _2 != null &&
                    _2.Equals(other._2)
                ) && 
                (
                    _3 == other._3 ||
                    _3 != null &&
                    _3.Equals(other._3)
                ) && 
                (
                    _4 == other._4 ||
                    _4 != null &&
                    _4.Equals(other._4)
                ) && 
                (
                    _5 == other._5 ||
                    _5 != null &&
                    _5.Equals(other._5)
                ) && 
                (
                    _6 == other._6 ||
                    _6 != null &&
                    _6.Equals(other._6)
                ) && 
                (
                    _7 == other._7 ||
                    _7 != null &&
                    _7.Equals(other._7)
                ) && 
                (
                    _8 == other._8 ||
                    _8 != null &&
                    _8.Equals(other._8)
                ) && 
                (
                    _9 == other._9 ||
                    _9 != null &&
                    _9.Equals(other._9)
                ) && 
                (
                    _10 == other._10 ||
                    _10 != null &&
                    _10.Equals(other._10)
                ) && 
                (
                    _11 == other._11 ||
                    _11 != null &&
                    _11.Equals(other._11)
                ) && 
                (
                    _12 == other._12 ||
                    _12 != null &&
                    _12.Equals(other._12)
                ) && 
                (
                    _13 == other._13 ||
                    _13 != null &&
                    _13.Equals(other._13)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (_0 != null)
                    hashCode = hashCode * 59 + _0.GetHashCode();
                    if (_1 != null)
                    hashCode = hashCode * 59 + _1.GetHashCode();
                    if (_2 != null)
                    hashCode = hashCode * 59 + _2.GetHashCode();
                    if (_3 != null)
                    hashCode = hashCode * 59 + _3.GetHashCode();
                    if (_4 != null)
                    hashCode = hashCode * 59 + _4.GetHashCode();
                    if (_5 != null)
                    hashCode = hashCode * 59 + _5.GetHashCode();
                    if (_6 != null)
                    hashCode = hashCode * 59 + _6.GetHashCode();
                    if (_7 != null)
                    hashCode = hashCode * 59 + _7.GetHashCode();
                    if (_8 != null)
                    hashCode = hashCode * 59 + _8.GetHashCode();
                    if (_9 != null)
                    hashCode = hashCode * 59 + _9.GetHashCode();
                    if (_10 != null)
                    hashCode = hashCode * 59 + _10.GetHashCode();
                    if (_11 != null)
                    hashCode = hashCode * 59 + _11.GetHashCode();
                    if (_12 != null)
                    hashCode = hashCode * 59 + _12.GetHashCode();
                    if (_13 != null)
                    hashCode = hashCode * 59 + _13.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GetStatusResponseAntennas left, GetStatusResponseAntennas right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GetStatusResponseAntennas left, GetStatusResponseAntennas right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
