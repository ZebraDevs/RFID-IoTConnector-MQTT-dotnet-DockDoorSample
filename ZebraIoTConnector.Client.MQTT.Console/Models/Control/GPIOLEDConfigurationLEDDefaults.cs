/*
 * RAW MQTT Payloads
 *
 *  
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// LED default configurations
    /// </summary>
    [DataContract]
    public partial class GPIOLEDConfigurationLEDDefaults : IEquatable<GPIOLEDConfigurationLEDDefaults>
    { 
        /// <summary>
        /// set default color for LED 2
        /// </summary>
        /// <value>set default color for LED 2</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum Enum
        {
            /// <summary>
            /// Enum GREENEnum for GREEN
            /// </summary>
            [EnumMember(Value = "GREEN")]
            GREENEnum = 0,
            /// <summary>
            /// Enum REDEnum for RED
            /// </summary>
            [EnumMember(Value = "RED")]
            REDEnum = 1,
            /// <summary>
            /// Enum AMBEREnum for AMBER
            /// </summary>
            [EnumMember(Value = "AMBER")]
            AMBEREnum = 2        }

        /// <summary>
        /// set default color for LED 2
        /// </summary>
        /// <value>set default color for LED 2</value>

        [DataMember(Name="1")]
        public Enum? _1 { get; set; }

        [DataMember(Name="2")]
        public Enum? _2 { get; set; }
        public Enum? _3 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GPIOLEDConfigurationLEDDefaults {\n");
            sb.Append("  _1: ").Append(_1).Append("\n");
            sb.Append("  _2: ").Append(_2).Append("\n");
            sb.Append("  _3: ").Append(_3).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GPIOLEDConfigurationLEDDefaults)obj);
        }

        /// <summary>
        /// Returns true if GPIOLEDConfigurationLEDDefaults instances are equal
        /// </summary>
        /// <param name="other">Instance of GPIOLEDConfigurationLEDDefaults to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GPIOLEDConfigurationLEDDefaults other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    _1 == other._1 ||
                    _1 != null &&
                    _1.Equals(other._1)
                ) && 
                (
                    _2 == other._2 ||
                    _2 != null &&
                    _2.Equals(other._2)
                ) && 
                (
                    _3 == other._3 ||
                    _3 != null &&
                    _3.Equals(other._3)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (_1 != null)
                    hashCode = hashCode * 59 + _1.GetHashCode();
                    if (_2 != null)
                    hashCode = hashCode * 59 + _2.GetHashCode();
                    if (_3 != null)
                    hashCode = hashCode * 59 + _3.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GPIOLEDConfigurationLEDDefaults left, GPIOLEDConfigurationLEDDefaults right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GPIOLEDConfigurationLEDDefaults left, GPIOLEDConfigurationLEDDefaults right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
